@startuml careerClass
!theme reddress-lightblue

skinparam classAttributeIconSize 0
class career.controller{
    - {field} jobService: object

    + {method} getAllPublishJobsHandler(req: express.Request, res: express.Response): void
    + {method} getPublishedJobHandler(req: express.Request, res: express.Response): void
    + {method} addResumeHandler(req: express.Request, res: express.Response): void
}

class job.service{
    + {method} createJob(jobData: Object): void
    + {method} getAllJob(filter: Object, options: Object): void
    + {method} getAllPublishedJob(filter: Object, options: Object): void
    + {method} getJobById(id: string): void
    + {method} editJobById(id: string, jobData: Object): void
    + {method} deleteJobById(id: string): void
}

class candidate.service{
    + {method} createCandidate(candidatePayload: Object, cv: file): void
    + {method} getAllCandidate(filter: Object, options: Object): void
    + {method} getCandidateById(id: string): void
    + {method} editCandidateById(id: string, candidateData: Object): void
    + {method} deleteCandidateById(id: string): void
}

class career.router{
    + {field} router: express.Router
}

class schema.Candidate {
    + {field} jobId: ObjectId
    + {field} interviewId: [ObjectId]
    + {field} status: String
    + {field} stage:  String
    + {field} firstName:  String 
    + {field} midName: String
    + {field} lastName:  String 
    + {field} fullName: String 
    + {field} unsignedFullName:  String
    + {field} email:  String
    + {field} phone:  String
    + {field} sex: enum 
    + {field} referral: String 
    + {field} cv: Object
    + {field} hyperlink: String 
    + {field} employer: Object
    + {field} education: Object
    + {field} createdAt:  Date
    + {field} updatedAt: Date
}

class schema.Job {
    + {field} userId: ObjectId
    + {field} candidateId: [ObjectId]
    + {field} title: String
    + {field} unsignedTitle: String
    + {field} status:  enum 
    + {field} department: enum
    + {field} jobType:  String 
    + {field} location: String 
    + {field} jobDescription:  String
    + {field} jobDescription: String
    + {field} shortDes: String
    + {field} skill: String
    + {field} experience: String
    + {field} minSalary: Number
    + {field} maxSalary: Number
    + {field} currency: String
    + {field} createdAt: Date
    + {field} updatedAt: Date
}

career.router ..> career.controller
career.controller ..> job.service
career.controller ..> candidate.service
job.service ..> schema.Job
candidate.service ..> schema.Candidate
@enduml