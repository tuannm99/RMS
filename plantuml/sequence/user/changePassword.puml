
@startuml updateUser
!theme reddress-lightblue

autonumber 1.1
actor User
participant UI
control  userController
boundary userService
database Mongodb

User -> UI: update User
activate UI

UI -> userController: call api
activate userController

alt#Gold #LightBlue Successful case
    userController -> userController: checkAuth()
else #Pink Failure
    userController --> UI: auth error
    UI --> User: display error
end

userController -> userService: findUserById()
activate userService
alt#Gold #LightBlue Successful case
    userService -> Mongodb: query()
    activate Mongodb
    Mongodb -> Mongodb: Validate
    Mongodb --> userService: success
else #Pink Failure
    Mongodb --> userService: mongoose exception
    deactivate Mongodb
    userService --> userController: redirect exception
    userController --> UI: password not match
    UI --> User: show error
    deactivate Mongodb
    deactivate UI
end


alt#Gold #LightBlue Successful case
    userService -> userService: isPasswordMatch()
    userService -> userController: ok()
else #Pink Failure
    userService --> userController: redirect exception
    userController --> UI: password not match
    UI --> User: show error
end

userController -> userService: updateUserById()

alt#Gold #LightBlue Successful case
    userService -> Mongodb: query()
    activate Mongodb
    Mongodb -> Mongodb: Validate
    Mongodb --> userService: success
    userService --> userController: updatedUser
    userController --> UI: userData
    UI --> User: display data
else #Pink Failure
    Mongodb --> userService: mongoose exception
    deactivate Mongodb
    userService --> userController: redirect exception
    deactivate userService
    userController --> UI: error message
    deactivate userController
    UI --> User: show error
    deactivate Mongodb
    deactivate UI
end

@enduml
